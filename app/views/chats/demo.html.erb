
<html>
  <head>
    <title>Opentok Quick Start</title>
    <script src='http://static.opentok.com/v2/js/opentok.min.js'></script>
    <script type="text/javascript">

$(document).ready(function() {	    
    
    var publisher;
    var streams = [];
    var token = "<%= @token %>";
    var watchers = 0;
	var streamers = 0;
    
    
    
    function connect() {
	  if (OT.checkSystemRequirements() == 0) {
        console.log("The client does not support WebRTC.");
      } else {
        console.log("The client does support WebRTC.");
        session = OT.initSession("45266732", "<%= @session_id %>");
		
		//Initial session connection
		//Local user connects to the session
		session.on("sessionConnected", function(event){
			console.log("sessionConnected by local user, watchers: "+watchers+" & streamers: "+ streamers);
		});	
			
		//session connection destroyed
		session.on("sessionDisconnected", function(event) {
			console.log("The session disconnected. " + event.reason);
			watchers--;
	        document.getElementById('disconnectBtn').style.display = 'none';
	    });
        
        	
		
		//forign user connects to the session
		session.on("connectionCreated", function(event){
			var stream = event.stream;
            watchers++;
            console.log("connectionCreated by forign user, watchers: "+watchers+" & streamers: "+ streamers);
        });
		
		//session connection destroyed
		session.on("connectionDestroyed", function(event){
			watchers--;
			console.log("session connection destroyed, watchers: "+watchers+" & streamers: "+ streamers);
        });
		
		
		
		//stream created by forign user
		session.on("streamCreated", function(event){
			console.log("new stream created by forign user")
		  	if(event.stream.connection.connectionId != session.connection.connectionId){
		  		if ( $('#ivid1').children().length < 3 ) {
				session.subscribe(event.stream, 'ivid1', {width:155, height:150, insertMode: 'append'});
				setupJoin();
				
				
		  		streamers++;
		  		console.log("sucsessfully subscribed to new forign stream 1of5, watchers: "+watchers+" & streamers: "+ streamers)
				}else if ( $('#ivid2').children().length < 3 ) {
				session.subscribe(event.stream, 'ivid2', {width:155, height:150, insertMode: 'append'});
				setupJoin();
		  		streamers++;
		  		console.log("sucsessfully subscribed to new forign stream 2of5, watchers: "+watchers+" & streamers: "+ streamers)
				}else if ( $('#ivid3').children().length < 3 ) {
				session.subscribe(event.stream, 'ivid3', {width:155, height:150, insertMode: 'append'});
				setupJoin();
		  		streamers++;
		  		console.log("sucsessfully subscribed to new forign stream 3of5, watchers: "+watchers+" & streamers: "+ streamers)
				}else if ( $('#ivid4').children().length < 3 ) {
				session.subscribe(event.stream, 'ivid4', {width:155, height:150, insertMode: 'append'});
				setupJoin();
		  		streamers++;
		  		console.log("sucsessfully subscribed to new forign stream 4of5, watchers: "+watchers+" & streamers: "+ streamers)
				}else if ( $('#ivid5').children().length < 3 ) {
				session.subscribe(event.stream, 'ivid5', {width:155, height:150, insertMode: 'append'});
				setupJoin();
		  		streamers++;
		  		console.log("sucsessfully subscribed to new forign stream 5of5, watchers: "+watchers+" & streamers: "+ streamers)
				}else{
					
					
				console.log("no more room for streams")	
				}		
		  	}
		  	
		  });	
		  	

		//Local user stoped publishing to the session
		session.on("streamDestroyed", function(event){
			streamers--;
			console.log("forign user stopped streaming, watchers: "+watchers+" & streamers: "+ streamers);
			
			if ( $('#ivid1').children().length == 0 ){
				
			}else if ( $('#ivid2').children().length == 0 ){
				
			}else if ( $('#ivid3').children().length == 0 ){
				
			}else if ( $('#ivid4').children().length == 0 ){
				
			}else if ( $('#ivid5').children().length == 0 ){
				
			}else{
				// not sure what to do at this point zzzZZz
			}
			
			
		});	
		
		
		
		      
      
        // Replace token with your own value:
        session.connect(token, function(error) {
          if (error) {
            OT.log("Unable to connect: ", error.message);
          } else {
            //document.getElementById('disconnectBtn').style.display = 'block';
            //$('#disconnectBtn').hide();
            console.log("session.connect, Connected to the session.");
          }
        });
	  }
    }


  
function publish(){
	console.log( $('#ivid1').children().length);
	if ( $('#ivid1').children().length < 3 ) {
		publisher = OT.initPublisher('ivid1', {width:155, height:150, insertMode: 'append'});
		$(".overlayno:first").attr('class', 'overlay');
		session.publish(publisher);
		
		console.log("publisher object was created on 1of5");
	}else if ( $('#ivid2').children().length < 3 ) {
		publisher = OT.initPublisher('ivid2', {width:155, height:150, insertMode: 'append'});
		$(".overlayno:second").attr('class', 'overlay');	
		session.publish(publisher);
		
		console.log("publisher object was created on 2of5");
	}else if ( $('#ivid3').children().length < 3 ) {
		publisher = OT.initPublisher('ivid3', {width:155, height:150, insertMode: 'append'});
		$(".overlayno:third").attr('class', 'overlay');
		session.publish(publisher);
		
		console.log("publisher object was created on 3of5");
	}else if ( $('#ivid4').children().length < 3 ) {
		publisher = OT.initPublisher('ivid4', {width:155, height:150, insertMode: 'append'});
		$(".overlayno:forth").attr('class', 'overlay');
		session.publish(publisher);
		
		console.log("publisher object was created on 4of5");
	}else if ( $('#ivid5').children().length < 3 ) {
		publisher = OT.initPublisher('ivid5', {width:155, height:150, insertMode: 'append'});
		$(".overlayno:last").attr('class', 'overlay');
		session.publish(publisher);
		
		console.log("publisher object was created on 5of5");
	}else{
		console.log("no more room to publish a stream!")
		return;
	}
	
    
	//Local user started publishing to the session
	publisher.on("streamCreated", function(event){
  	
  		streamers++;
    	console.log("local publisher started streaming, watchers: "+watchers+" & streamers: "+ streamers);
	});	  
 
	//Local user stoped publishing to the session
	publisher.on("streamDestroyed", function(event){
		streamers--;
		console.log("local publisher stopped streaming, watchers: "+watchers+" & streamers: "+ streamers);
    
	});	  
};  
      
      
      
     
function disconnect() {
  console.log("publisher dissstroyed")
  publisher.destroy();
  //session.unpublish(publisher);
  
};
		
		
function setupJoin(){
	if ( $('#ivid1').children().length == 2 ){
		$(".connect").attr('class', 'connect1');
		return;
	}else if ( $('#ivid2').children().length == 2 ){
		console.log('just do it');
		$('#ivid2').attr('class', '.connect');
		//$(".connect").attr('class', 'connect1');
		return;
	}else if ( $('#ivid3').children().length == 2 ){
		$(".connect").attr('class', 'connect1');
		return;
	}else if ( $('#ivid4').children().length == 2 ){
		$(".connect").attr('class', 'connect1');
		return;
	}else if ( $('#ivid5').children().length == 2 ){
		$(".connect").attr('class', 'connect1');
	}
	
}		
  
$('#quit_butt_1').click( function () { 
  disconnect();
 
 
});
      
$('.connect1, .connect').click( function () {
  //publish();
  console.log($('#ivid1').children().length);
  console.log($('#ivid2').children().length);
  console.log($('#ivid3').children().length);
  console.log($('#ivid4').children().length);
  console.log($('#ivid5').children().length);
});
  





connect();

});
    </script>
  </head>
  <body>
    
    <div id="streams_wrapper">
		<div id="streams_container">
         	<div id="streams_bin">
		    	<div id="ovid1">
		    		<div id="ivid1">
		    			<div class="connectup">
		    				<a><strong>(( (connect)) )</strong></a>
		    			</div>	
		    			
		    			<div class="overlayno">
		    			</div>
		    							
		    			
		    		</div>
		    	</div>		
				<div id="ovid2">
		    		<div id="ivid2">
		    			<div class="connectdown">
		    				<a><strong>(( (connect)) )</strong></a>
		    			</div>	
		    			
		    			<div class="overlayno">
		    			</div>
	    			</div>
		    	</div>
		    	<div id="ovid3">
		    		<div id="ivid3">
		    			<div class="connectdown">
		    				<a><strong>(( (connect)) )</strong></a>
		    			</div>	
		    			
		    			<div class="overlayno">
		    			</div>
		    	   </div>		
		    	</div>
		    	<div id="ovid4">
		    		<div id="ivid4">
		    			<div class="connectdown">
		    				<a><strong>(( (connect)) )</strong></a>
		    			</div>	
		    			
		    			<div class="overlayno">
		    			</div>
		    		</div> 	
		    	</div>
		    	<div id="ovid5">
		    		<div id="ivid5">
		    			<div class="connectdown">
		    				<a><strong>(( (connect)) )</strong></a>
		    			</div>	
		    			
		    			<div class="overlayno">
		    			</div>
	    			  </div>
		    	</div>
            </div>
	    </div>
	    
		<div id="chats_aside">
			<h1>H1 tag</h1>
			<h3> test aside</h3>
			
			
	    </div>
</div>
    
    
 
  </body>
</html>