
<html>
  <head>
    <title>Opentok Quick Start</title>
    <script src='http://static.opentok.com/v2/js/opentok.min.js'></script>
    <script type="text/javascript">
    
      // Initialize API key, session, and token...
      // Think of a session as a room, and a token as the key to get in to the room
      // Sessions and tokens are generated on your server and passed down to the client
    var apiKey = <%= @api_key %>;
    //var sessionId = "WN0VKQzN-fg";
    
    //var token = "T1==cGFydG5lcl9pZD00NTI2NjczMiZzaWc9NjY1MjU1NTJkYjhiNGY3NTA0Yjc2YTM1ZTg3MTJhODVkZWZmOGQ1Zjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTFfTVg0ME5USTJOamN6TW41LU1UUXpOVEF6TlRRd09UazFNMzVHVkU1dVVURTNablExTkVnelJpc3pTMVJXTjBWS1F6Ti1mZyZjcmVhdGVfdGltZT0xNDM1MDM1NDU0Jm5vbmNlPTAuMDQzMTgzODYzMzAxMjI4NyZleHBpcmVfdGltZT0xNDM3NjI3MzkzJmNvbm5lY3Rpb25fZGF0YT0=";
  
    
    var publisher;
    var streams = [];
    var token = <%= @token %>;
$(document).ready(function() {		
    
    
    
    
    
    
    function connect() {
	  if (OT.checkSystemRequirements() == 0) {
        console.log("The client does not support WebRTC.");
      } else {
        console.log("The client does support WebRTC." + connectionCount);
        
        session = OT.initSession("45266732", "<%= @session_id %>");
		 
		session.on({ 
		  
		  streamCreated: function (event){
		  	console.log("new stream created")
		  	
		  	subscriber = session.subscribe(event.stream, vid2);
		  	session.connect(token);
		  },
		  
		  
		  
		  
		  connectionCreated: function (event) {
		    
		    var stream = event.stream;
            
            
            
		    console.log("session on NEW connection created" + connectionCount);
		  },
		      
		
		  connectionDestroyed: function (event) {
		    
		    console.log("session on, connection distroyed" + connectionCount);
		  },
		       
	    
	      sessionDisconnected: function sessionDisconnectHandler(event) {
	        // The event is defined by the SessionDisconnectEvent class
	        console.log("Disconnected from the session.");
	        document.getElementById('disconnectBtn').style.display = 'none';
	        if (event.reason == "networkDisconnected") {
	          alert("Your network connection terminated.")
	        }
		  }
        });
      
      
        // Replace token with your own value:
        session.connect(token, function(error) {
          if (error) {
            OT.log("Unable to connect: ", error.message);
          } else {
            document.getElementById('disconnectBtn').style.display = 'block';
            console.log("session.connect, Connected to the session." + connectionCount);
            
            
            
    	
    
            
                      
		  }
        });
	  }
    }


  
  
  
  
  
  
  
  
  function publish(){
        
        publisher = OT.initPublisher();
        session.publish(publisher);
        console.log("You can publish an audio-video stream.");
        
     
        publisher.on({
          streamCreated: function (event) {
            
            
            console.log("Publisher started streaming."+ connectionCount);
          },
        
          streamDestroyed: function (event) {
            console.log("Publisher stopped streaming. Reason: " + event.reason);
            
          }
        });
};
  function disconnect() {
    console.log("publisher dissstroyed")
    publisher.destroy();
    
  };
		
		
		
  $('#disconnectBtn').click( function () { 
  	disconnect();
  });
      
  $('#start').click( function () {
    publish();
  });
  
  connect();
});
    </script>
  </head>
  <body>
    <h1><%= @session_id %></h1>
    <div id="vid1"></div>
    <div id="vid2"></div>
    <button id="start">start</button>
    <button id="disconnectBtn">disconnect</button>
  </body>
</html>